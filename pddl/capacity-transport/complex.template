(define (problem ComplexTransport)
    (:domain capacity-transport)

    (:objects
        {% for i in range(1, 11) %}cargo{{ i }} {% endfor %} 
        plane1 plane2 plane3 truck1 truck2 truck3 
        {% for location in locations %}{{ location }} {% endfor %} 
        {% for i in range(1, 11) %}d{{ i }} {% endfor %} 
        {% for i in range(0, 7) %}x{{ i }} {% endfor %}
    )

    (:init
        (= (total-cost) 0)

        (current_time d1)

        
        {% for i in range(1, 10) %}(day-to-day d{{ i }} d{{ i+1 }})
        {% endfor %}

        {% for i in range(1, 11) %}(Cargo cargo{{ i }})
        {% endfor %}

        (Plane plane1)
        (Plane plane2)
        (Plane plane3)

        (Truck truck1)
        (Truck truck2)
        (Truck truck3)

        {% for location in locations %}(Location {{ location }})
        (Airport {{ location }})
        {% endfor %}

        {% for cargo, location in cargo_locations.items() %}(At {{ cargo }} {{ location }})
        {% endfor %}
 
        {% for truck, location in truck_locations.items() %}(At {{ truck }} {{ location }})
        {% endfor %}

        {% for plane, location in plane_locations.items() %}(At {{ plane }} {{ location }})
        {% endfor %}

        {% for i in range(0, 6) %}(capacity-counter x{{ i }} x{{ i+1 }})
        {% endfor %}

        (capacity truck1 x5)
        (capacity truck2 x3)
        (capacity truck3 x2)
        (capacity plane1 x1)
        (capacity plane2 x3)
        (capacity plane3 x4)
    )

    (:goal
    
        (and {% for cargo, location in cargo_locations.items() %}(At {{ cargo }} {{ location }})
        {% endfor %}
        )
    )
)